Carta:
-nome
-cor
-custo
-tipo
-virada
-efeito

get Nome
get Cor
get Custo
get Tipo
get Efeito
get Virada

constructor for everything
constructor for name, color, manaCost, type, subtype and tapped as default

isTapped() #devolve true se a carta tiver virada
tap()
untap()
getCard()
showCard()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Creature:
-card characteristics
+attack
+defenss
+subtype
+dead
+permanent
+spell
+turnInWhichItWasPlayed

get Attack
get Defense
set Permanent
set Spell
setTurnInWhichItWasPlayed(int)   # defines the number of the turn the creature was played in
isDead()
isPermanent()?
isSpell()?

constructor for everything
constructor for type, dead, permanent and spell as default
constructor with everything as default

doAttack(player)       
doAttack(plainswalker) 
doAttack(creature)  #damage taken is permanent
doDefese(creature)  #damage taken is permanent

@Override:getCard()

canAttack(int)                   # provided the number of the turn, it determines if a creature is able to attack this turn or not

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Artifact:
-características da carta
+permanent
+spell

set Permanent
set spell
isPermanent()?
isSpell()?

constructor for everything
constructor for type, permanent and spell as default
constructor with everything as default

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Enchantment:
-características da carta
+subType
+permanent
+spell
+enchantedCreature               # defines to which creature the enchantment is applied
+isEnchanted                     # determines if the enchantment is enchanted to a creature or not

set Permanent
isPermanent()?
set Spell
isSpell()?

enchantCreature(creature) 

constructor for everything
constructor for type, permanent and spell as default
constructor with everything as default
@Override: getCard()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Land:
-características da carta
+subType
+permanent

set Permanent
isPermanent()?

constructor for everything
constructor for type and permanent as default
constructor with everything as default

@Override: getCard()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Plainswalker:
-características da carta
+life
+permanent
+spell
+dead

set Life
set Permanent
set Spell´
set Dead
get Life
isPermanent()?
isSpell()?
isDead()?

constructor for everything
constructor for type, dead, permanent and spell as default
constructor with everything as default

addLife()
looseLife()

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Instant:
-características da carta
+spell

set Spell
isSpell()?

constructor for everything
constructor for type and spell as default
constructor with everything as default

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Sorcery:
-características da carta
+spell

set Spell
isSpell()?

constructor for everything
constructor for type and spell as default
constructor with everything as default

